个人体会第二步

一，《这个程序员在阿里五年晋升三次，Coding 是立身之本》	https://blog.csdn.net/weixin_44326589/article/details/90437977

	1，让自己脱离舒适区：跟当时的主管说，我很焦虑，因为各种工作上的问题，想知道该怎么避免这种状态。
		一个刚毕业的小同学，应该还是埋头做事的阶段，如果有焦虑感，那是非常好的事情，一定要保持住
		我就记住了这句话，不再排斥自己因为能力不够，工作没做不到位带来的不适感，而是利用这些，督促自己学习、适应、解决问题，同时尽量让自己保持状态，脱离舒适区。
	2，皮实一点，帮团队承担更多
		帮团队承担更多就是让自己做到持续成长的方式，判断一件事要不要做的原因不是这件事做完是否可以拿出来讲，而是这件事是否可以解决团队的问题，因为解决问题的过程我一定可以学到东西，
		同时也会让我得到团队的认可，当然也附带了其他好处，比如事情做得多了，年终总结的时候，一定有值得总结沉淀的亮点，就像广撒网一样。
	3，向身边优秀的同学看齐
		大公司与创业公司该去哪里，在我看来，大公司优先级远超过创业公司的原因是，大公司平台好，聚集了行业内最顶尖的人才
		学到别人的思考，应用到自己的工作里。也因此养成了总结的习惯，长期培养的抽象总结能力

	关于晋升
		天时、地利、人和缺一不可的
		关于地利，我的经验是，在一个领域内不断地学习，是成长的必要条件。
		关于人和，对我帮助最大的方法是，永远按照更高的层级要求自己做事情。其实逻辑很简单，一定是一个连续的、循序渐进的过程。
				不管是做什么，一定要以更高的目标要求自己。

	总结：Coding 是立身之本
		最后这一条就是汇聚所有心得的基础。“我们要保持一直在一线 coding”（在一线编程）
		我认为作为主管第一要务是对团队负责，保证团队目标达成，保证团队稳定，负责团队每个人的成长
		持续 coding 可以保持一个人敏锐的技术嗅觉，在技术选型，方案讨论时做出正确的判断，避免自己逐渐演变成太“形而上”的技术思维。
		但从精力分配角度来看，对团队负责一定会占用大部分精力，我的经验是，多写，多 CR。
		（CR：code review 代码审查）

二，《Kotlin 和 Flutter 对于开发者究竟意味着什么？》
	笔者认为一个技术人员想要具备完善的素养，需要朝着这些方向努力：
	1，夯实基础；
	2，学好英语；
	3，提升学习能力；
	4，坚持总结归纳问题的习惯；
	5，增强分析问题，解决问题的能力。
	
	一个技术人员能够走多远，靠的不是会某种技术，而是完善以上高质量的素养。
	
三，《Java面试官：老兄，你真的确定double精度比float低吗？？？》
	在金融计算中，必须要使用BigDecimal，double和float都不适合。因为单单一个精度问题就能把人整晕了。
	计算机进行的是二进制运算，我们输入的十进制数字会先转换成二进制，进行运算后再转换为十进制输出。
	double和float提供了快速的运算，然而问题在于转换为二进制的时候，有些数字不能完全转换，只能无限接近于原本的值，这就导致了你看到的不正确的结果。’”	
	BigDecimal可以表示任意精度的小数，并对它们进行计算。但要小心使用 BigDecimal(double) 构造函数，因为它会在计算的过程中产生舍入误差。
	
	2.0 / 0 = ∞
	2 / 0 直接报错。
	
	int[] a = {1, 2, 3, 4}
	int[] b = {2, 4}
	int[] c = {1, 3}
	int[] d = {2}
	
	我大致演算了一下。说一下我的思路。d只能是2，b只能是4，a是1或者3，c是3或者1。
	遍历长数组，剔除长数组中含有的最短数组的元素。b中剔除d中的2还剩下4，a中剔除d中的2还剩下1、3、4，c中不含d中元素，所以不用剔除。
	剔除后b中还剩下一个4，d中是一个2。再次遍历剔除a中的4。最后a和c中只剩下1和3了，再分别剔除互异的数就行了。”

	出平常工作时自己认为最难的事情，选项大致有：”
	写各种文档
	与客户沟通
	预估工作量
	给变量命名
	
	最难的是，给变量命名，
	阿里巴巴Java开发手册中「强制」规定，方法名、参数名、成员变量、局部变量要统一使用lowerCamelCase风格，必须遵从驼峰形式。”
	最好，变量声明的地方要离第一次使用的地方近。否则的话，代码阅读起来会很困难，因为人眼睛接受的屏幕高度是有限的。
	
四，《二叉查找树与平衡二叉树》----未看	https://blog.csdn.net/qq_25940921/article/details/82183093

五：《非科班的java程序员该如何补充计算机基础知识，需要看哪些书？》----https://blog.csdn.net/learning__java/article/details/90377617
	第二个问题，数据库要建索引，btree和hash两种索引，区别是什么？各自应该用在什么场景。
	第三个问题，为什么用消息队列？
	什么叫解藕，什么叫内聚？生产者消费者又是什么意思？
	结论如下：
	1 计算机组成原理，计算机操作系统，计算机网络，数据库，数据结构，算法 这是六门基础课要学习
	2 你没时间系统的学习一遍，只能去找工作中很大可能用到的，先过一遍，有基础概念，以后遇到问题的时候，可以知道归属哪个领域。
		怎么知道什么内容是可能用到的，请自行搜索腾讯课堂修真院的洗髓换骨营，缩减到了10％的内容。
	3 对于没有用户量的系统而言，没有太多学习基础课程的必要，因为你不需要解决这些问题。但薪水和你能解决的问题是等价的，你愿意一直只做初级程序员么？
	4 编程思维在基础课程里都有锻炼，在工作中也更重要。

六：《人类激励理论》	马斯洛需求层次理论是人本主义科学的理论之一，马斯洛需求层次理论便出自《人的动机理论》
	马斯洛理论
	把需求分成
		1，生理需求（Physiological needs）：	人类个人的生理机能就无法正常运转。换而言之，人类的生命就会因此受到威胁。在这个意义上说，生理需要是推动人们行动最首要的动力。
			激励措施：增加工资、改善劳动条件、给予更多的业余时间和工间休息、提高福利待遇。
		2，安全需求（Safety needs）：			整个有机体是一个追求安全的机制，人的感受器官、效应器官、智能和其他能量主要是寻求安全的工具，
			激励措施：强调规章制度、职业保障、福利待遇，并保护员工不致失业，提供医疗保险、失业保险和退休福利、避免员工收到双重的指令而混乱。
		3，爱和归属感（Love and belonging）：	人人都希望得到相互的关系和照顾。感情上的需要比生理上的需要来的细致，
			激励措施：提供同事间社交往来机会，支持与赞许员工寻找及建立和谐温馨的人际关系，开展有组织的体育比赛和集体聚会。
		4，尊重（Esteem）：						人人都希望自己有稳定的社会地位，要求个人的能力和成就得到社会的承认。
			激励措施：公开奖励和表扬，强调工作任务的艰巨性以及成功所需要的高超技巧，颁发荣誉奖章、在公司刊物发表文章表扬、优秀员工光荣榜。
		5，自我实现（Self-actualization）：		自我实现的需要是最高层次的需要，是指实现个人理想、抱负，发挥个人的能力到最大程度，
			激励措施：设计工作时运用复杂情况的适应策略，给有特长的人委派特别任务，在设计工作和执行计划时为下级留有余地。
		6，在自我实现需求之后，还有自我超越需求（Self-Transcendence needs），超自我实现应用
		
		马斯洛陆续写出了《动机与人格》、《存在心理学探索》、《宗教、价值观和高峰体验》、《科学心理学》、《人性能达的境界》、
		《人的动机理论》等著作，
	
	
七：高效能人士的七个习惯

	前言
	第一章：积极主动
		1，要完成最渴望的目标，战胜最艰巨的挑战，你必须发觉并应用一些原则或者自然法则。
		感想：
			1，有些东西不是你想做就能做到的，这句话我的感想体现在抗拒诱惑上，我们身边的诱惑实在是太多了，周末双休我想
			好好学习的时候，经常会被诱惑到去打游戏，而且不止一次。我的解决办法是，直接去公司，不呆在家里。
			在公司我就能好好学习。
			2，有些原则或者是什么，真的会引领你走向成功，PDCA CDOC DOE等等，很多东西，都是人类的思想结晶。包括孔孟之道，都是人类的结晶。
			
		2，恐惧和不安全感，我现在就想得到，谴责和抱怨，绝望和无助，缺乏人生平衡，渴望理解，冲突和分歧，停滞不前
		思想：
			恐惧和不安全是每个人都有的。请直面
			我现在就想得到，我有很多东西都不可能直接得到，世界不是你的欲望构成的，在中国的社会，更多的是温水煮青蛙 + 快刀斩乱麻，双管齐下。
			谴责抱怨，绝望无助，，，请积极乐观的面对世界。活着才是最难的事情
			缺乏人生平衡：每个人自己是世界上最宝贵的财富，其他的一切都是不重要的，不要沉陷在一些鸡毛蒜皮的小事上，健康 家庭 品德很多都是最重要的。
				加班重要吗，公司只给你8小时 的工资，你为什么要工作那么久，下班后的所有时间都是你自己的，你知道吗。
				你应该把握时间，引领自己走向成功。
		
		3，谁也无法说服和改变他人，因为我们每个人都守着一扇只能从内开启的改变之门，不论动之以情或者是说之以理，我们都不能替别人开门
		思想：
			我希望你能够自己打开门看看，外面的世界是那么的精彩，漂亮的，美丽的，更加丰富多彩的。
			但是这些东西都需要钱，钱从哪里来，从你的能力来，能力高的钱就多了，
			钱能够解决95%的问题。
		4，教育孩子
		思想：
			多鼓励孩子，孩子需要鼓励。
			不要直接以自己的孩子和其他孩子攀比，不再比较
			不再呵护孩子，而是告诉他，父母不用保护你了，你可以自己去做事情。有信心，开始肯定自我的价值。
		5，思维定式 和思维转换的力量
		思想：
			文艺复兴带来的是技术吗？是什么呢
			我觉得带来的是新鲜的思想，思维定式是可怕的，同事告诉我的是我没有时间学习，好好工作就能成功
			
			这些我觉得就是思维定式，思维一定要转换啊。
			时间都是挤出来的，只有为自己工作，才能够走向成功。
		6，遵循原则
		思想：	
			有些原则是必须要遵守的，做人要诚信，等等。
		7，治标不治本
		思想:
			如果你的方法不能够根治你现在的问题，那么你的方法就是没用的，。
			如果你提出的方法，不能够让你一直学习，那么你的方法就是错误的，没有效果。
			你需要找到一个方法，让你能够向着你的目标持续发展，并且走向成功

八：https://showme.codes/ 翟志军

九：《难得的一次技术面——终得小米offer》---掘金 波波仔--https://juejin.im/post/5cf9ddb0e51d4510774a8829
	两年经历的概括，
		再谦卑的骨头里，也流淌着江河。——葛亮《北鸢》
	
	不要看轻一个人。每一个人都是傻逼，但是其实每一个人都不是傻逼。
	你的圈子，决定了你的思维。

十：《面试了 N 个候选人后，我总结出这份 Java 面试准备技巧！》————狸猫技术窝-掘金-https://juejin.im/post/5cfa21c45188254c4346771c
	
十一：《字节跳动、腾讯后台开发面经分享(2019.5)》————天澄-掘金-字节跳动、腾讯后台开发面经分享(2019.5)
	
十二：《活多人少，每个需求都紧急，多数项目延期，怎么破？》——翟志军——http://showme.codes/2019-03-01/software-engineering-tricky-problem/
	
	第1，把所有的工作内容（包括日常维护和新功能实现）列出来，
		同时，也要找到这些工作的交集（避免重复开发）。
		工作内容列出来后，确定它们的业务价值及优先级，并预估其开发难度。
		有些新功能是老板直接下发的，但是实现难度过高且业务价值又不高（团队及产品经理觉得），能和老板谈就和老板谈。
		这部分工作是我觉得最难的。这个工作的优先级一定要让老板看到。主要是避免老板中间随意的插入需求。
		当然，有时需要向现实妥协，但不是每次。同时也要让所有人达成共识，遵守这个优先级

	第2，是找出团队平时工作中最耗时的环节（瓶颈），想办法在这个环节上减少耗时（自动化或者别的办法）。
		一般来说，经常工作在这个耗时环节的人会知道如何优化它。

	第3，是慢慢让人可以流动，意思是人没办法调剂到其它项目，通常是因为他不了解其它项目（业务或者技术）。
		所以，在平时，就要注意将项目的“知识”尽可能准确地传递给更多人。当然，也可以定向的传递。
		具体操作方式要看团队平时的协作方式。最后，1，2，3步需要重复执行，同时1，2，3步也不是顺序的。
		笔者提出这样的解法并不是笔者猜的，而是有依据的。依据如下：
		1，人员不足只是表象，我们怎么知道是真的人员不足，还是没有真正发挥每个人的最大潜能呢？
			第2、3步是为了让每个人发挥最大的潜能。而工具方面，个人建议通过看板可视化人员的工作内容，来达到了解当前资源状态的目的。
		2，即使每个人的潜能都发挥到了极致，但是还是出现人员不足的情况啊。这就是第1步要解决的问题。
			这时，我们要学会舍弃。但是为什么老板就不会舍弃，老爱插入一些所谓的紧急需求呢？
			个人认为是因为老板不了解你当前的工作内容及其优先级。所以，这个优先级一定要和老板达成共识。

	我只要结果，不管过程的管理方式。

十三：《最好的礼物是一个真诚的建议》——翟志军——http://showme.codes/2018-12-11/to-be-broad-minded-toward-others/
	对待上等人直指人心，可打可骂，以真面目待他；
	对待中等人最多隐喻他，要讲分寸，他受不起打骂；
	对待下等人要面带微笑，双手合十，他很脆弱、装不下太多指责和训斥，他只配用世俗的礼节
	
	到底是谁的问题不重要， 严于律己，宽以待人对你的职业生涯会很有帮助。
	
十四：《阿里三面后的思考——企业应该如何留住员工》-翟志军-http://showme.codes/2018-06-24/alibaba-interview/
		
	给了别人想要的，你就会得到你想要的，——红雀
	留住员工，靠的不是“留”，而是“给”。当然，前提是这个人值得留。

	这个理论告诉我们如何满足一个人的不同层次的需求，
	在公司层面，如何操作呢？
	毕竟公司里会同时存在不同层次需求的人，而且同一个人不同时期的需求还可能千差万别。
	海纳百川，有容乃大。
	但是不可能路边随随便便就收纳，而是能帮助公司实现目标的人。
	这是海纳百川的前提。

	P.S. 公司文化并不是没有理论的发展，而是要根据公司的发展需要进行调整。
	我再次强调，上述想法的前提：
	不可能路边随随便便就收纳，而是能帮助公司实现目标的人。所以，要严进。
	
	小结：听说30到35岁是大多数人职场的转折点。我相信了。想清自己想要的，是做好职业规划的前提。
	
十五：《如何进行有效的指导，如何成功的分配任务》——翟志军——http://showme.codes/2018-02-19/secrets-of-great-management-1/
	本文主要来自：《门后的秘密——卓越管理的故事》
	
	1，如何进行有效的指导
		指导也是管理者工作内容的一部分，但它着重于提高技术水平和能力。
		指导是一种帮忙与被帮忙的关系，所以一定要确认对方想要得到你的帮忙。
	指导要基于PDCA，P：收集资料，分析，目标确认，计划实施。D：DO，C：Cheak，A，Action总结
	
	2，成功地分配任务
		明智地选择你的分配任务对象。这名员工应该想要承担更多的责任，并已经确认了自己的职业发展方向，
		这项工作正好适合他的职业发展方向。不要选择对这项工作不感兴趣的下属接受任务。
	
	什么样的成果才你能接受的。
	在软件行业，特别是互联网行业，很多管理者也不完全知道自己对某项工作的期待。
	这不重要，重要的是管理者应该将这一点表明给下属听
	
	明确表明不被允许的方法
	确定阶段性里程碑。当你做出分配工作的决定后，确保这一决定至少分为两部分：
	做出备选方案；选择其一。一定要表明哪一（些）部分是你分配下去的，
	如果在这两部分工作之间的某一点，你想进行检查，请明确地提出来。

十六：《如何充分“使用”研发团队新人》——翟志军——http://showme.codes/2018-01-15/new-fish/

十七：《吐槽：那些Java设计中不得不说的槽点》-王下七匹狼-https://juejin.im/post/5d1eaee86fb9a07ef161a1b1
	1，求长度各有千秋
		数组的长度
		string的长度
		集合的长度
		
	2，字符串的截取
		public String substring(int beginIndex, int endIndex) {
		  if (beginIndex < 0) {
			  。。 。。 。。
		  }
		  if (endIndex > count) {
			   。。 。。 。。
		  }
		  if (beginIndex > endIndex) {
			   。。 。。 。。
		  }
		  return ((beginIndex == 0) && (endIndex == count)) ? this :
		   new String(offset + beginIndex, endIndex - beginIndex, value);
		}
		当我们调用字符串 str 的 substring 得到字符串 subStr，其实这个操作，
		无非就是调整了一下 subStr 的 offset 和 count ，用到的内容还是 str 之前的 value 字符数组，
		并没有重新创建新的专属于 subStr 的内容字符数组。如果 subStr 的生命周期要长于 str 或者手动设置 str 为null，
		当垃圾回收进行后，str 被回收掉，subStr 没有回收掉，那么内存占用依旧存在，因为 subStr 持有 str 字符数组的引用。

十八：《高并发核心技术之 - 幂等性》-幂等性-https://juejin.im/post/5d1d6bbc5188250501476798
	1，幂等性就是指：一个幂等操作任其执行多次所产生的影响均与一次执行的影响相同
		幂等性问题经常会是由网络问题引起的，还有重复操作引起的。
	2，场景一：比如点赞功能，一个用户只能对同一片文章点赞一次，重复点赞提示已经点过赞了。
		public void like(Article article,User user) {
			//检查是否点过赞
			if (checkIsLike(article,user)) {
				//点过赞了
				throw new ApiException(CodeEnums.SYSTEM_ERR);
			}
			else {
				//保存点赞
				saveLike(article,user);
			}
		}
		看上去好像没有什么问题，保存点赞之前已经检查过是否点赞了，理论上同一个人不会对同一篇文章重复点赞。
		但实际不是这样的。因为网络请求不是排队进来的，而是一窝蜂涌进来的。
		某些时候，用户网络不好，可能很短的时间内点击了多次，由于网络传输问题，这些请求可能会同时来到我们的服务器。

		第一个请求 checkIsLike（） 返回 false ， 正在执行 saveLike() 操作，还没来的及提交事务
		第二个请求过来了 ，checkIsLike（） 返回 也是 false , 并去 执行了 saveLike() 操作

		这样子，就造成了一个用户同时对一篇文章进行了多次点赞操作。
		这就是典型的幂等性问题， 操作了一次和操作了两次结果不一样，因为你多点了一次赞，按照幂等性原则 不管你点击了多少次结果都一样，只点了一次赞。
		很多场景都是这样造成的，比如用户重复下单，重复评论，重复提交表单等。
		那怎么解决呢？
		假设网络的请求是排队进来的就不会出现这个问题了。
		于是我们可以改成这样：
		public synchronized void like(Article article,User user) {
			//检查是否点过赞
			if (checkIsLike(article,user)) {
				//点过赞了
			throw new ApiException(CodeEnums.SYSTEM_ERR);
			}
			else {
				//保存点赞
			saveLike(article,user);
			}
		}
		synchronized 同步锁 这样我们的请求就会乖乖的排队进来了。

		PS ：这样做是效率比较低的做法，不建议这么做，只是举例子，synchronized 也不适合分布式集群场景。
	
	3，解决幂等性问题方案
		1，synchronized 适合单机应用，不追求性能 ，不追求并发。
		2，分布式锁 但是往往我们的应用是分布式的集群，并且很讲究性能，并发，
			所以我们需要用到 分布式锁 来解决这个问题。	

十九：《工具类算法--快排的优化（Java）》-作者：defineYIDA-https://juejin.im/post/5d1c039d6fb9a07eb67daa82
	
	算法的运行时间耗费在：
	1）比较元素；
	2）移动元素。
	
	1，快速排序（quick sort）
		元素移动次数少，元素比较次数多；
	2，归并排序（merge sort）
		元素移到次数多，元素比较次数最少。
	如果移动次数比较少，就使用快排。
	如果比较次数比较少，就使用归排。
	
	快速排序的处理方式。
		从第一个排序方式开始。

二十：《你所不知道的HelloWorld背后的执行原理》-饭谈编程-https://juejin.im/post/5d194e745188256e98090e93
	整个代码的执行过程可以分为三个阶段：1，代码编译；2，类加载；3，类执行
	1，代码编译的作用就是将我们编写的 Main.java文件转化为Main.class文件，.class在这里又被称为字节码文件
		1，词法分析，即将源代码的字符流转变为Token集的过程
			比如整型int在我们编程中它就是三个字符组成的，就是i、n、t 三个字符，而在编译过程中它就是一个Token，不可拆分。
		2，语法分析，构建抽象语法树了，
			所谓的抽象语法树其实就是一种用来描述程序代码语法结构的树形表示方式，
			其中语法树的每一个节点都代表着程序代码中的一个语法结构，如包、类型、修饰符、运算符等。
		3，填充符号表
			符号表是由一组符号地址和符号信息构成的表格，
			这个表格在编译的不同阶段都会被用到，如在目标代码生成阶段，会对符号名进行地址分配，而符号表就是地址分配的依据。
		4，语义分析
			语义分析，也就是语义检测阶段。检测语法树是否合理，语义分析会通过标注检查和数据及控制流分析检查两步入手，在生成字节码的最后一步信息把关
		5，字节码生成，将前面各个步骤生成的信息转化成字节码然后放入磁盘中，还进行了少量的代码添加和转换工作，如我们自己重载的构造函数。
	
	2，类加载
		由类加载器将编译后的字节码文件【Main.class】加载到虚拟机中
		1，自定义加载器，使我们自己实现的
		2，启动类加载器 Bootstrap ClassLoader 
			启动类加载器的作用主要是加载 %JAVA_HOME%\jre\lib\rt.jar 类库，将其加载到虚拟机内存中
		3，扩展类加载器 Extension ClassLoader
			扩展类加载器的作用主要是负责加载JAVA_HOME\jre\lib\ext目录下的所有类库，主要是载入扩展包。
		4，系统类加载器 Application ClassLoader
			也称之为应用程序类加载器，负责加载用户类路径(也就是我们配置的CLASSPATH)上所指定的类库，是应用程序中默认的类加载。
		
		HelloWorld，就是系统类加载器 Application ClassLoader。
			先加载===>	验证
						||
						准备
						||
						解析==>初始化
			验证+准备+解析 称为链接阶段
			
		加载：由系统加载器，将编译后的.class文件加载到内存中，
			抛出个问题，所谓的加载到内存中，我们都知道JVM把内存分成了几大模块，那么请问是加载到哪个模块中？热点面试题，答案见文末！
		链接三部曲：将Main.class的二进制数据合并到JRE中
			对传入的二进制数据流进行验证